// _mixins.scss: Mixins reutilizables para botones, imágenes de fondo e íconos

// _mixins.scss: Mixins reutilizables para botones, imágenes de fondo, íconos, grid y buscador
@use "../abstracts/variables" as *;
@use "sass:color";
@use "variables" as *;

// =====================================
// Hero Background
// =====================================
@mixin hero-bg($img-path, $height: 50rem) {
  background: {
    image: url(#{$img-path});
    repeat: no-repeat;
    size: cover;
    position: center center;
  }
  height: $height;
  width: 100%;
}

// =====================================
// Botones
// =====================================
@mixin button-base($bg-color, $text-color) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 1.6rem;
  font-weight: 600;
  padding: 1.2rem 2.4rem;
  border: none;
  border-radius: 0.8rem;
  cursor: pointer;
  text-decoration: none;
  line-height: 1.2;
  gap: 1rem;
  position: relative;
  overflow: hidden;
  background-color: $bg-color;
  color: $text-color;
  transition: background-color 0.3s ease, transform 0.3s ease,
    box-shadow 0.3s ease, color 0.2s ease;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin button-icon-only(
  $size: 4rem,
  $bg-color: $color-primario,
  $icon-color: $color-blanco
) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: $size;
  height: $size;
  background-color: $bg-color;
  color: $icon-color;
  border: none;
  border-radius: 50%;
  font-size: 2rem;
  cursor: pointer;
  padding: 0;
  transition: background-color 0.3s ease, transform 0.3s ease;

  &:hover {
    background-color: color.adjust($bg-color, $lightness: -10%);
    transform: scale(1.1);
  }

  i,
  svg {
    pointer-events: none;
    transition: transform 0.15s ease;
  }
}

// =====================================
// Íconos
// =====================================
@mixin icono-btn-estilos(
  $font-size: 1.8rem,
  $rotate: 15deg,
  $scale: 1.2,
  $transition-duration: 0.2s
) {
  i,
  svg {
    font-size: $font-size;
    vertical-align: middle;
    pointer-events: none;
    transition: color 0.2s ease, transform $transition-duration ease;
  }

  &:hover {
    i,
    svg {
      transform: rotate($rotate) scale($scale);
    }
  }

  &:focus-visible {
    outline: 2px solid rgba($color-primario, 0.5);
    outline-offset: 4px;
  }
}

@mixin icon-spacing($side: right, $space: 0.8rem) {
  @if $side == left {
    i,
    svg {
      margin-right: $space;
    }
  } @else if $side == right {
    i,
    svg {
      margin-left: $space;
    }
  }
}

// =====================================
// Grid de Categorías
// =====================================
// Mixin flexible para grid
@mixin categoria-card-grid(
  $min-width: 280px,
  $gap: 3rem,
  $margin-top: 3rem,
  $responsive-columns: 1fr,
  // Valor para móviles
  $breakpoint: $breakpoint-sm // Usa tus variables globales
) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
  margin-top: $margin-top;

  @media (max-width: $breakpoint) {
    grid-template-columns: $responsive-columns;
  }
}
// ==========================================================
// Mixin: Card
// Descripción: Estilos base para cada tarjeta de categoría
// con imagen, sombra, efecto hover y versión responsive.
// ==========================================================

@mixin card($img-height: 30rem) {
  // Estilo general del contenedor de la tarjeta
  overflow: hidden;
  border-radius: 1rem;
  background-color: #fff;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;

  // Estilo de la imagen principal de la tarjeta
  img {
    width: 100%;
    height: $img-height; // Altura personalizable
    object-fit: cover;
    border-bottom: 4px solid transparent;
    transition: transform 0.3s ease, border-color 0.3s ease;
  }

  // Efecto hover sobre la imagen (zoom + color de borde)
  &:hover img {
    transform: scale(1.1);
    // border-color: $color-secundario;
  }

  // Estilo del enlace de texto debajo de la imagen
  .link {
    display: block;
    text-align: center;
    padding: 2rem;
    font-size: 2rem;
    font-weight: bold;
    background-color: $color-gris-claro;
    color: $color-primario;
    border-top: 1px solid #ddd;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, color 0.3s ease,
      border-radius 0.3s ease;

    // Efecto hover sobre el nombre del enlace
    &:hover {
      background-color: $color-secundario;
      color: $color-blanco;
      border-bottom-right-radius: 2rem;
    }
  }

  // ================================
  // Media Query: versión móvil
  // ================================
  @include respond-to(sm) {
    img {
      height: 22rem; // Reduce altura en pantallas pequeñas
    }

    .nombre-link {
      font-size: 1.6rem;
      padding: 1.4rem;
    }
  }
}

// =====================================
// Buscador catálogo
// =====================================
@mixin buscador-catalogo {
  margin: 5rem auto;
  display: flex;
  flex-direction: column;
  align-items: center;

  .search-container {
    display: flex;
    align-items: center;
    background-color: $color-gris-claro;
    border-radius: 25px;
    padding: 0.8rem 1.5rem;
    max-width: 30rem;
    border: 2px solid $color-borde;
    margin-top: 5rem;
    transition: all 0.3s ease-in-out;

    &:focus-within {
      border-color: $color-secundario;
      box-shadow: 0 0 8px rgba($color-secundario, 0.3);
    }

    .search-input {
      border: none;
      outline: none;
      background: transparent;
      flex: 1;
      font-size: 1.6rem;
      padding: 0.5rem;
      color: $color-texto;
    }

    .search-btn {
      background: none;
      border: none;
      cursor: pointer;
      color: $color-gris;
      font-size: 1.8rem;
      transition: color 0.3s ease-in-out;

      &:hover {
        color: $color-secundario;
      }
    }
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint == "tablet" {
    @media (max-width: 768px) {
      @content;
    }
  }
}

// ========================
// MEDIA QUERIES
// ========================

@mixin respond($breakpoint) {
  @if $breakpoint == "xs" {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == "sm" {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == "md" {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == "lg" {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == "xl" {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == "xxl" {
    @media (max-width: $breakpoint-xxl) {
      @content;
    }
  }
}

// =====================================
// Mixins para sección de Testimonios
// =====================================

// Mixin para el diseño del encabezado de testimonios
// Incluye estilos para título (h2) y párrafo descriptivo

@mixin testimonios-header {
  margin-bottom: 4rem;

  h2 {
    font-size: 3rem;
    color: $color-primario;
  }

  p {
    font-size: 1.6rem;
    color: $color-texto;
  }

  // Estilos adaptativos en tablet
  @include respond("tablet") {
    h2 {
      font-size: 2.4rem;
    }
  }
}

// Mixin para la cuadrícula que contiene los testimonios
// Responsive desde desktop hasta mobile (1 columna)

@mixin testimonios-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(28rem, 1fr));
  gap: 3rem;

  @include respond("tablet") {
    grid-template-columns: 1fr;
  }
}

// Mixin para el diseño de cada tarjeta de testimonio
// Incluye efecto hover y diseño del avatar + texto

@mixin testimonio-card {
  background-color: $color-blanco;
  padding: 2rem;
  border-radius: 1rem;
  box-shadow: 0 6px 12px rgba($color-negro, 0.05);
  text-align: center;
  transition: transform 0.3s ease;

  &:hover {
    transform: scale(1.03); // Efecto de zoom al pasar el mouse
  }

  // Avatar circular
  img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 50%;
    margin-bottom: 1.5rem;
    border: 3px solid $color-secundario;
  }

  // Texto del testimonio
  blockquote {
    font-style: italic;
    font-size: 1.6rem;
    color: $color-primario;

    footer {
      margin-top: 1rem;
      font-weight: bold;
      color: $color-secundario;
    }
  }
}

// // ========================
// // MEDIA QUERIES
// // ========================

// // Extra pequeño - móviles
// @mixin respond-xs {
//   @media (max-width: $breakpoint-xs) {
//     @content;
//   }
// }

// // Pequeño - tablets pequeñas
// @mixin respond-sm {
//   @media (max-width: $breakpoint-sm) {
//     @content;
//   }
// }

// // Mediano - tablets grandes / laptops
// @mixin respond-md {
//   @media (max-width: $breakpoint-md) {
//     @content;
//   }
// }

// // Grande - desktops
// @mixin respond-lg {
//   @media (max-width: $breakpoint-lg) {
//     @content;
//   }
// }

// // Extra grande - pantallas grandes
// @mixin respond-xl {
//   @media (max-width: $breakpoint-xl) {
//     @content;
//   }
// }

// ========================
// GRID RESPONSIVE O HELPERS
// ========================

// Mixin para media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: 576px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: 768px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: 992px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: 1200px) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (max-width: 1400px) {
      @content;
    }
  }
}

// Helpers para visibilidad responsive
.hide-on-mobile {
  @include respond-to(sm) {
    display: none !important;
  }
}

.show-on-desktop {
  display: none;

  @include respond-to(md) {
    display: block !important;
  }
}

// Mixin para grid responsive
@mixin grid-responsive($columns: 3, $gap: 2rem) {
  display: grid;
  gap: $gap;
  grid-template-columns: repeat($columns, 1fr);

  @include respond-to(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include respond-to(sm) {
    grid-template-columns: 1fr;
  }
}
